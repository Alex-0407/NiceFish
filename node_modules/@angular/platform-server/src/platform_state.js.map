{"version":3,"sources":["../../../../modules/@angular/platform-server/src/platform_state.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,IAAM,gBAAS,CAAT,MAAA,GAAS,OAAA,CAAQ,QAAC,CAAQ,CAAC;AAEjC,OAAO,EAAA,UAAE,EAAW,MAAA,EAAO,MAAA,eAAA,CAAA;AAC3B,OAAO,EAAA,QAAE,EAAQ,MAAA,2BAAA,CAAA;AAEjB,OAAO,EAAA,MAAE,EAAM,MAAA,mCAAA,CAAA;AACf;;;;GAIG;AACH;IACA;;OAEG;IACH,uBADuB,IAAM;QAAN,SAAA,GAAA,IAAA,CAAM;IAAI,CAAA;IAGjC;;;OAGG;IACH,sCAFG,GAEH,cAF6B,MAAA,CAAO,MAAA,EAAO,CAAE,YAAC,CAAY,IAAC,CAAI,IAAC,CAAI,CAAC,CAAC,CAAA;IAGtE;;;OAGG;IACH,mCAFG,GAEH,cAFuB,MAAA,CAAO,IAAA,CAAK,IAAC,CAAI,CAAC,CAAA;IAUzC,oBAAC;AAAD,CAvBA,AAuBC;;AATM,wBAAA,GAAoC;IAG3C,EAFE,IAAA,EAAM,UAAA,EAAW;CAGlB,CAFC;AAGF,kBAAkB;AADX,4BAAA,GAAiF,cAAM,OAAA;IAG9F,EAAC,IAFC,EAAK,SAAA,EAAW,UAAA,EAAY,CAAA,EAAG,IAAA,EAAM,MAAA,EAAQ,IAAA,EAAM,CAAA,QAAE,EAAQ,EAAG,EAAE,EAAG;CAGtE,EAJ6F,CAI7F,CAFC;AAKF;IACA,gBAAgB;IAChB,aAAa,CAAC,UAAU,CAAC;IACzB;;;OAGG;IACH,aAAa,CAAC,cAAc,CAAC;IAC7B,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC;AAC7B,CAAC","file":"platform_state.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nconst /** @type {?} */ parse5 = require('parse5');\n\nimport {Injectable, Inject} from '@angular/core';\nimport {DOCUMENT} from '@angular/platform-browser';\n\nimport {getDOM} from './private_import_platform-browser';\n/**\n * Representation of the current platform state.\n * \n * \\@experimental\n */\nexport class PlatformState {\n/**\n * @param {?} _doc\n */\nconstructor(\nprivate _doc: any) {}\n/**\n * Renders the current state of the platform to string.\n * @return {?}\n */\nrenderToString(): string { return getDOM().getInnerHTML(this._doc); }\n/**\n * Returns the current DOM state.\n * @return {?}\n */\ngetDocument(): any { return this._doc; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [DOCUMENT, ] }, ]},\n];\n}\n\nfunction PlatformState_tsickle_Closure_declarations() {\n/** @type {?} */\nPlatformState.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPlatformState.ctorParameters;\n/** @type {?} */\nPlatformState.prototype._doc;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}