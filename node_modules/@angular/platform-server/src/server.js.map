{"version":3,"sources":["../../../../modules/@angular/platform-server/src/server.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAA,gBAAE,EAAgB,MAAA,iBAAA,CAAA;AACzB,OAAO,EAAA,mBAAE,EAAmB,MAAA,mBAAA,CAAA;AAC5B,OAAO,EAAA,sBAAE,EAAmD,QAAA,EAAU,QAAA,EAAU,oBAAA,EAA6C,iBAAA,EAAmB,YAAA,EAAc,qBAAA,EAAuB,SAAA,EAAW,YAAA,EAAa,MAAA,eAAA,CAAA;AAC7M,OAAO,EAAA,UAAE,EAAU,MAAA,eAAA,CAAA;AACnB,OAAO,EAAA,aAAE,EAAc,QAAA,EAAS,MAAA,2BAAA,CAAA;AAEhC,OAAO,EAAA,qBAAE,EAAqB,MAAA,QAAA,CAAA;AAC9B,OAAO,EAAA,sBAAE,EAAsB,MAAA,YAAA,CAAA;AAC/B,OAAO,EAAA,gBAAE,EAAiB,aAAA,EAAc,MAAA,kBAAA,CAAA;AACxC,OAAO,EAAA,aAAE,EAAa,MAAA,kBAAA,CAAA;AACtB,OAAO,EAAA,wBAAE,EAAyB,oBAAA,EAAqB,MAAA,uBAAA,CAAA;AACvD,OAAO,EAAA,gBAAE,EAAiB,MAAA,EAAO,MAAA,mCAAA,CAAA;AACjC,OAAO,EAAA,uBAAE,EAAwB,kBAAA,EAAmB,MAAA,mBAAA,CAAA;AACpD,OAAO,EAAA,gBAAE,EAAgB,MAAA,eAAA,CAAA;AACzB,OAAO,EAAA,cAAE,EAA8B,MAAA,UAAA,CAAA;AACvC;;;GAGE;AACF,sBAHC,OAAA;IAIC,MAHM,IAAI,KAAA,CAAM,uCAAC,OAAqC,OAAO,CAAI,CAAC;AAIpE,CAAC;AAED,MAAI,CAHG,IAAA,gBAAA,CAAM,kCAAA,GAA6E;IAIxF,EAAC,OAHC,EAAQ,QAAA,EAAU,UAAA,EAAY,SAAA,EAAW,IAAA,EAAM,CAAA,QAAE,CAAQ,EAAC;IAI5D,EAAC,OAHC,EAAQ,oBAAA,EAAsB,UAAA,EAAY,iBAAA,EAAmB,KAAA,EAAO,IAAA,EAAM,IAAA,EAAM,CAAA,QAAE,CAAQ,EAAC;IAI7F,EAAC,OAHC,EAAQ,gBAAA,EAAkB,QAAA,EAAU,sBAAA,EAAuB,EAAE,aAAA;IAI/D,wFAAwF;IACxF,EAAC,OAHC,EAAQ,wBAAA,EAA0B,QAAA,EAAU,IAAA,EAAK;CAIpD,CAHC;AAIF;;;GAGG;AACH,2BANC,QAAA;IAOC,MAAM,CANC,cAAQ,gBAAA,CAAiB,WAAC,EAAW,CAAE,CAAC,CAAA,CAAE;AAOnD,CAAC;AACD;;;GAGG;AACH,MATC,yCAAA,YAAA;IAUC,MAAM,CATC,SAAA,EAAU,GAAI,IAAI,oBAAA,CAAqB,YAAC,CAAY,GAAG,YAAA,CAAa;AAU7E,CAAC;AACD;;;GAGG;AACH,MAZC,2CAAA,UAAA;IAaC,IAAM,gBAAK,CAZL,WAAA,GAAc,cAAM,OAAA,UAAA,CAAW,oBAAC,EAAoB,EAAhC,CAAgC,CAAE;IAa5D,MAAM,CAZC,WAAA,CAAY;AAarB,CAAC;AAED,MAAI,CAZG,IAAA,gBAAA,CAAM,uBAAA,GAAsC;IAajD,kBAAA;IACA,EAAC,OAZC,EAAQ,YAAA,EAAc,UAAA,EAAY,8BAAA,EAAgC,IAAA,EAAM,CAAA,kBAAE,CAAkB,EAAC;IAa/F,uBAAuB;IACvB,EAAC,OAZC,EAAQ,iBAAA,EAAmB,WAAA,EAAa,uBAAA,EAAwB;IAalE,gBAAgB;IAChB,EAAC,OAZC,EAAQ,gBAAA,EAAkB,WAAA,EAAa,gBAAA,EAAiB;IAa1D;QACE,OAAO,EAZE,sBAAA;QAaT,UAAU,EAZE,gCAAA;QAaZ,IAAI,EAZE,CAAA,gBAAE,CAAgB;QAaxB,KAAK,EAZE,IAAA;KAaR;CACF,CAZC;AAaF;;;;GAIG;AACH;IAAA;IAWA,CAAC;IAAD,mBAAC;AAAD,CAXA,AAWC;;AApBM,uBAAA,GAAoC;IAW3C,EAVE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBAWtB,OANO,EAJE,CAAA,aAAE,CAAa;gBAWxB,OANI,EAJK,CAAA,UAAE,CAAU;gBAWrB,SANK,EAJM,CAAA,uBAAE,EAAwB,qBAAA,CAAsB;aAW5D,EAVC,EAAG;CAWJ,CAVC;AAWF,kBANkB;AAHX,2BAAA,GAAiF,cAAM,OAAA,EAW7F,EAX6F,CAW7F,CAVC;AAaF;IACA,gBAAgB;IAChB,YANO,CAAM,UAAA,CAAA;IAOb;;;OAGG;IACH,YAAY,CAAC,cAAc,CAAC;AAC5B,CAAC;AAED;;;GAGG;AACH,mBAxBC,QAAA;IAyBC,IAAI,gBAAgB,CA9BhB,MAAA,GAA8B,QAAA,CAAS,GAAC,CAAG,cAAC,EAAe,IAAA,CAAK,CAAC;IA+BrE,EAAE,CAAC,CAAC,MA9BC,IAAS,MAAA,CAAO,QAAC,CAAQ,CAAC,CAAA;QA+B7B,MAAM,CA9BC,aAAA,CAAc,MAAC,CAAM,QAAC,CAAQ,CAAC;IA+BxC,CAAC;IA9BC,IAAA,CAAK,CAAA;QA+BL,MAAM,CA9BC,MAAA,EAAO,CAAE,kBAAC,EAAkB,CAAE;IA+BvC,CAAC;AACH,CAAC;AAED;;GAEG;AACH,MAAM,CA9BC,IAAA,gBAAA,CAAM,cAAA,GA+BT,qBAAqB,CA9BC,YAAC,EAAa,QAAA,EAAU,kCAAA,CAAmC,CAAC;AAgCtF;;;;GAIG;AACH,MAAM,CA9BC,IAAA,gBAAA,CAAM,qBAAA,GA+BT,qBAAqB,CA9BC,mBAAC,EAAoB,eAAA,EAAiB,kCAAA,CAAmC,CAAC","file":"server.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PlatformLocation} from '@angular/common';\nimport {platformCoreDynamic} from '@angular/compiler';\nimport {APP_BOOTSTRAP_LISTENER, Injectable, InjectionToken, Injector, NgModule, PLATFORM_INITIALIZER, PlatformRef, Provider, RendererFactoryV2, RootRenderer, createPlatformFactory, isDevMode, platformCore} from '@angular/core';\nimport {HttpModule} from '@angular/http';\nimport {BrowserModule, DOCUMENT} from '@angular/platform-browser';\n\nimport {SERVER_HTTP_PROVIDERS} from './http';\nimport {ServerPlatformLocation} from './location';\nimport {Parse5DomAdapter, parseDocument} from './parse5_adapter';\nimport {PlatformState} from './platform_state';\nimport {ALLOW_MULTIPLE_PLATFORMS, DebugDomRootRenderer} from './private_import_core';\nimport {SharedStylesHost, getDOM} from './private_import_platform-browser';\nimport {ServerRendererFactoryV2, ServerRootRenderer} from './server_renderer';\nimport {ServerStylesHost} from './styles_host';\nimport {INITIAL_CONFIG, PlatformConfig} from './tokens';\n/**\n * @param {?} feature\n * @return {?}\n */\nfunction notSupported(feature: string): Error {\n  throw new Error(`platform-server does not support '${feature}'.`);\n}\n\nexport const /** @type {?} */ INTERNAL_SERVER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  {provide: DOCUMENT, useFactory: _document, deps: [Injector]},\n  {provide: PLATFORM_INITIALIZER, useFactory: initParse5Adapter, multi: true, deps: [Injector]},\n  {provide: PlatformLocation, useClass: ServerPlatformLocation}, PlatformState,\n  // Add special provider that allows multiple instances of platformServer* to be created.\n  {provide: ALLOW_MULTIPLE_PLATFORMS, useValue: true}\n];\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction initParse5Adapter(injector: Injector) {\n  return () => { Parse5DomAdapter.makeCurrent(); };\n}\n/**\n * @param {?} rootRenderer\n * @return {?}\n */\nexport function _createConditionalRootRenderer(rootRenderer: any) {\n  return isDevMode() ? new DebugDomRootRenderer(rootRenderer) : rootRenderer;\n}\n/**\n * @param {?} stylesHost\n * @return {?}\n */\nexport function _addStylesToRootComponentFactory(stylesHost: ServerStylesHost) {\n  const /** @type {?} */ initializer = () => stylesHost.rootComponentIsReady();\n  return initializer;\n}\n\nexport const /** @type {?} */ SERVER_RENDER_PROVIDERS: Provider[] = [\n  ServerRootRenderer,\n  {provide: RootRenderer, useFactory: _createConditionalRootRenderer, deps: [ServerRootRenderer]},\n  ServerRendererFactoryV2,\n  {provide: RendererFactoryV2, useExisting: ServerRendererFactoryV2},\n  ServerStylesHost,\n  {provide: SharedStylesHost, useExisting: ServerStylesHost},\n  {\n    provide: APP_BOOTSTRAP_LISTENER,\n    useFactory: _addStylesToRootComponentFactory,\n    deps: [ServerStylesHost],\n    multi: true\n  },\n];\n/**\n * The ng module for the server.\n * \n * \\@experimental\n */\nexport class ServerModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [BrowserModule],\n  imports: [HttpModule],\n  providers: [SERVER_RENDER_PROVIDERS, SERVER_HTTP_PROVIDERS],\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ServerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nServerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nServerModule.ctorParameters;\n}\n\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction _document(injector: Injector) {\n  let /** @type {?} */ config: PlatformConfig|null = injector.get(INITIAL_CONFIG, null);\n  if (config && config.document) {\n    return parseDocument(config.document);\n  } else {\n    return getDOM().createHtmlDocument();\n  }\n}\n\n/**\n * @experimental\n */\nexport const /** @type {?} */ platformServer =\n    createPlatformFactory(platformCore, 'server', INTERNAL_SERVER_PLATFORM_PROVIDERS);\n\n/**\n * The server platform that supports the runtime compiler.\n *\n * @experimental\n */\nexport const /** @type {?} */ platformDynamicServer =\n    createPlatformFactory(platformCoreDynamic, 'serverDynamic', INTERNAL_SERVER_PLATFORM_PROVIDERS);\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}